{{ $config := (datasource "config") }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dashboard-oidc-openresty
  namespace: kube-system
  labels:
    app: kubernetes-dashboard-oidc
    repo: ops-kube-system
    deployed-with: gomplate
data:
  nginx.conf: |
    events {
      worker_connections 128;
    }

    error_log /dev/stdout info;

    env OIDC_CLIENT_ID;
    env OIDC_CLIENT_SECRET;
    env SESSION_SECRET;

    http {
      resolver 8.8.8.8 ipv6=off;

      lua_package_path '~/lua/?.lua;;';

      # cache for JWT verification results
      lua_shared_dict introspection 10m;
      # cache for jwks metadata documents
      lua_shared_dict discovery 1m;

      server {
        listen 9000;

        set $session_secret os.getenv("SESSION_SECRET");
        set $session_cookie_secure on;

        large_client_header_buffers 4 32k;

        location / {

          access_by_lua '
            local opts = {
              client_id = os.getenv("OIDC_CLIENT_ID"),
              client_secret = os.getenv("OIDC_CLIENT_SECRET"),
              redirect_uri_path = "/oauth2/callback",
              ssl_verify = "no",
              discovery = "{{ $config.dex.oidcDiscoveryUrl }}",
              scope = "openid email profile groups",
              expiry_claim = "exp"
            }

            local res, err, _target, session = require("resty.openidc").authenticate(opts)

            if err or not res then
              ngx.status = 403
              ngx.say("forbidden")
              ngx.exit(ngx.HTTP_FORBIDDEN)
            end

            ngx.req.set_header("Authorization", "Bearer "..session.data.enc_id_token)
          ';

          proxy_pass http://127.0.0.1:9090;
        }
      }
    }
